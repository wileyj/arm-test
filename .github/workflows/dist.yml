name: Build Distributable Assets

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

jobs:
  dist:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        platform:
          - linux-x64
          - linux-armv7
          - linux-armv6
          - linux-arm64
          # - linux-musl-x64
          # - macos-x64
          # - macos-arm64
          # - windows-x64

    steps:
      - uses: actions/checkout@v2
      - name: Set Vars
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "GITHUB_REF_SHORT=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build distributable
        uses: docker/build-push-action@v3
        with:
          file: build-scripts/Dockerfile.${{ matrix.platform }}
          outputs: type=local,dest=./dist/${{ matrix.platform }}
          build-args: |
            OS_ARCH=${{ matrix.platform }}
            GIT_BRANCH=${{ env.GITHUB_REF_SHORT }}
            GIT_COMMIT=${{ env.GITHUB_SHA_SHORT }}

      - name: Compress artifact
        run: zip --junk-paths ${{ matrix.platform }} ./dist/${{ matrix.platform }}/*

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}
          path: ${{ matrix.platform }}.zip

  # Upload distributables to a new release if we're building a tag or a tag was passed in
  upload-dist:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.tag != '' }}
    needs:
      - create-release
    strategy:
      max-parallel: 4
      matrix:
        platform:
          - linux-x64
          - linux-armv7
          - linux-armv6
          - linux-arm64
          # - linux-musl-x64
          # - macos-x64
          # - macos-arm64
          # - windows-x64

    steps:
      - uses: actions/checkout@v2
      - name: Download distro
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.platform }}
          path: dist/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.platform }}.zip
          asset_name: ${{ matrix.platform }}.zip
          asset_content_type: application/zip
