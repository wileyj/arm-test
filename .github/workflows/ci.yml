name: CI

env:
  ALPINE_ARCH: linux/arm64, linux/amd64, linux/amd64/v2, linux/amd64/v3 # for release, build amd *and* most recent arm64 arch
  DEBIAN_ARCH: linux/amd64, linux/amd64/v2, linux/amd64/v3 # only amd arch is supported for branch/pr builds
  TEST_ENV: wileyj
on:
  # push:
  #   tags:
  #     - "**" # match all tag names
  pull_request:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to create (optional)"
        required: false

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ########################################################################
  ## Build Tagged Release
  ########################################################################
  build-source:
    # Only run if (a tag was passed in) -AND- (we're building the main branch which isn't a PR)
    # Note: build matrix is defined in ./build-source-binary.yml (it is not reusable)
    if: ${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    uses: wileyj/arm-test/.github/workflows/build-source-binary.yml@master
    with:
      tag: ${{ inputs.tag }}

  github-release:
    # Only run if (a tag was passed in) -AND- (we're building the main branch which isn't a PR)
    if: ${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    uses: wileyj/arm-test/.github/workflows/github-release.yml@master
    needs: build-source
    with:
      tag: ${{ inputs.tag }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

  docker-alpine-vals:
    if: ${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    runs-on: ubuntu-latest
    steps:
      - name: vals
        run: |
          echo "Alpine Debian Vals"
          echo "TEST_ENV: ${{ env.TEST_ENV }}"
          echo "ALPINE_ARCH: ${{ env.ALPINE_ARCH }}"
          echo "inputs.tag: ${{ inputs.tag }}"
          echo "github.ref: ${{ github.ref }}"
          echo "branch: ${{ github.ref_name }}"
          echo "GITHUB_HEAD_REF: ${{ env.GITHUB_HEAD_REF }}"
          echo "GITHUB_BASE_REF: ${{ env.GITHUB_BASE_REF }}"
          echo "GITHUB_REF: ${{ env.GITHUB_REF }}"
          echo "GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}"
          echo "extracted: ${{ steps.extract_branch.outputs.branch }}"
          echo "Branch Name: ${{ env.BRANCH_NAME }}"
  docker-alpine:
    # Only run if (a tag was passed in) -AND- (we're building the main branch which isn't a PR)
    if: ${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    uses: wileyj/arm-test/.github/workflows/image-build-alpine.yml@master
    needs: github-release
    # env:
    #     ALPINE_ARCH: linux/arm64, linux/amd64, linux/amd64/v2, linux/amd64/v3
    with:
      tag: ${{ inputs.tag }}
      platforms: ${{ env.ALPINE_ARCH }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  docker-debian-vals:
    if: ${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    runs-on: ubuntu-latest
    steps:
      - name: vals
        run: |
          echo "Docker Debian Vals"
          echo "TEST_ENV: ${{ env.TEST_ENV }}"
          echo "DEBIAN_ARCH:  ${{ env.DEBIAN_ARCH }}"
          echo "inputs.tag: ${{ inputs.tag }}"
          echo "github.ref: ${{ github.ref }}"
          echo "branch: ${{ github.ref_name }}"
          echo "GITHUB_HEAD_REF: ${{ env.GITHUB_HEAD_REF }}"
          echo "GITHUB_BASE_REF: ${{ env.GITHUB_BASE_REF }}"
          echo "GITHUB_REF: ${{ env.GITHUB_REF }}"
          echo "GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}"
          echo "extracted: ${{ steps.extract_branch.outputs.branch }}"
          echo "Branch Name: ${{ env.BRANCH_NAME }}"
  docker-debian:
    # Only run if (a tag was passed in) -AND- (we're building the main branch which isn't a PR)
    if: ${{ inputs.tag != '' && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    uses: wileyj/arm-test/.github/workflows/image-build-debian.yml@master
    needs: github-release
    # env:
    #   DEBIAN_ARCH: linux/amd64, linux/amd64/v2, linux/amd64/v3
    with:
      tag: ${{ inputs.tag }}
      platforms: ${{ env.DEBIAN_ARCH }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  ########################################################################
  ## Build Branch/PR
  ########################################################################
  build-branch-vals:
    if: ${{ inputs.tag == '' || (github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    runs-on: ubuntu-latest
    steps:
      - name: vals
        run: |
          echo "Build Branch Vals"
          echo "TEST_ENV: ${{ env.TEST_ENV }}"
          echo "DEBIAN_ARCH:  ${{ env.DEBIAN_ARCH }}"
          echo "inputs.tag: ${{ inputs.tag }}"
          echo "github.ref: ${{ github.ref }}"
          echo "branch: ${{ github.ref_name }}"
          echo "GITHUB_HEAD_REF: ${{ env.GITHUB_HEAD_REF }}"
          echo "GITHUB_BASE_REF: ${{ env.GITHUB_BASE_REF }}"
          echo "GITHUB_REF: ${{ env.GITHUB_REF }}"
          echo "GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}"
          echo "extracted: ${{ steps.extract_branch.outputs.branch }}"
          echo "Branch Name: ${{ env.BRANCH_NAME }}"
  build-branch:
    # Only run if (a tag was NOT passed in) or (we're building a non-master branch which isn't a PR)
    if: ${{ inputs.tag == '' || (github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && !contains(github.ref, 'refs/pull')) }}
    uses: wileyj/arm-test/.github/workflows/build-source-image.yml@master
    with:
      build_platforms: ${{ env.DEBIAN_ARCH }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
