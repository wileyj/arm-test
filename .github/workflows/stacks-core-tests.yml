## Github workflow to run full genesis and unit tests

name: Tests::Stacks Core

on:
  workflow_call:

## env vars are transferred to composite action steps
env:
  BITCOIND_TEST: 1
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 3
  TEST_TIMEOUT: 30

concurrency:
  group: stacks-core-tests-${{ github.head_ref || github.ref || github.run_id }}
  ## Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # Unit tests with code coverage
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    ## Continue the workflow in case a step fails (ex a single test fails)
    continue-on-error: true
    strategy:
      ## Continue the workflow in case a step fails (ex a single test fails)
      fail-fast: false
      matrix:
        ## Partition the tests into 8 jobs
        ##   - This is used in a later step when running `cargo nextest run ... --partition count:num/8`
        partition: [1, 2, 3, 4, 5, 6, 7, 8]
    steps:
      ## Setup test environment
      - name: Setup Test Environment
        id: setup_tests
        uses: stacks-network/actions/stacks-core/testenv@main
        with:
          btc-version: "25.0"

      ## Run test matrix using restored cache of archive file
      ##   - Test will timeout after env.TEST_TIMEOUT minutes
      - name: Run Tests
        id: run_tests
        timeout-minutes: ${{ fromJSON(env.TEST_TIMEOUT) }}
        uses: stacks-network/actions/stacks-core/run-tests/partition@main
        with:
          partition: ${{ matrix.partition }}
          total-partitions: 8

      ## Create and upload code coverage file
      - name: Code Coverage
        id: codecov
        #uses: stacks-network/actions/codecov@main
        uses: wileyj/actions/codecov@fix/codecov
        with:
          test-name: ${{ matrix.test-name }}

  check-tests:
    name: Check Tests
    runs-on: ubuntu-latest
    if: always()
    needs:
      - open-api-validation
      - core-contracts-clarinet-test
    steps:
      - name: Check Tests Status
        id: check_tests_status
        uses: stacks-network/actions/check-jobs-status@main
        with:
          jobs: ${{ toJson(needs) }}
          summary_print: "true"
