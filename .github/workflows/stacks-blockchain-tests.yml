name: Tests

on:
  workflow_call:

jobs:
  # # Run full genesis test
  # full-genesis:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Single full genesis integration test
  #       id: full_genesis_test
  #       env:
  #         DOCKER_BUILDKIT: 1
  #       # Remove .dockerignore file so codecov has access to git info
  #       run: |
  #         rm .dockerignore
  #         docker build -o coverage-output -f ./.github/actions/bitcoin-int-tests/Dockerfile.large-genesis .
  #     - name: Large Genesis Codecov
  #       id: full_genesis_codecov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         files: ./coverage-output/lcov.info
  #         name: large_genesis
  #         fail_ci_if_error: true
  #
  # # Run unit tests with code coverage
  # unit-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run units tests (with coverage)
  #       id: unit_tests_codecov
  #       env:
  #         DOCKER_BUILDKIT: 1
  #       # Remove .dockerignore file so codecov has access to git info
  #       run: |
  #         rm .dockerignore
  #         docker build -o coverage-output -f ./.github/actions/bitcoin-int-tests/Dockerfile.code-cov .
  #     - name: unit_tests
  #       id: codedov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         files: ./coverage-output/lcov.info
  #         name: unit_tests
  #         fail_ci_if_error: true
  #
  # open-api-validation:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run units tests (with coverage)
  #       id: api_codecov
  #       env:
  #         DOCKER_BUILDKIT: 1
  #       run: docker build -o dist/ -f .github/actions/open-api/Dockerfile.open-api-validate .
  #     - name: Upload bundled html
  #       id: upload_html_artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: open-api-bundle
  #         path: |
  #           dist
  #
  # # Run net-tests
  # nettest:
  #   # disable this job/test for now, since we haven't seen this pass
  #   #  on github actions in a while, and the failures can take > 4 hours
  #   if: ${{ false }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run network relay tests
  #       id: nettest
  #       env:
  #         DOCKER_BUILDKIT: 1
  #       run: docker build -f ./.github/actions/bitcoin-int-tests/Dockerfile.net-tests .

  # core-contracts-clarinet-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Execute core contract unit tests in Clarinet
  #       id: clarinet_unit_test
  #       uses: docker://hirosystems/clarinet:latest
  #       with:
  #         args: test --coverage --manifest-path=./contrib/core-contract-tests/Clarinet.toml
  #     - name: Export code coverage
  #       id: clarinet_codecov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         files: ./coverage.lcov
  #         verbose: true

  # # rustfmt checking
  # rustfmt:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run rustfmt check
  #       id: rustfmt
  #       env:
  #         DOCKER_BUILDKIT: 1
  #       run: docker build -f ./.github/actions/bitcoin-int-tests/Dockerfile.rustfmt .

  # # check for leaked creds
  # leaked-auth-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     # extract branch name NOT a pull request
  #     - name: Extract branch name
  #       if: ${{ github.event_name != 'pull_request' }}
  #       id: extract_branch
  #       run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

  #     # extract branch name on pull request
  #     - name: PR branch name
  #       if: ${{ github.event_name == 'pull_request' }}
  #       id: pr_extract_branch
  #       run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

  #     - name: TruffleHog OSS
  #       uses: trufflesecurity/trufflehog@v3.4.3
  #       with:
  #         path: ./
  #         # base: ${{ github.event.repository.default_branch }}
  #         base: ${{ env.BRANCH_NAME }}
  #         head: HEAD

  # dependency-review:
  #   if: ${{ github.event_name == 'pull_request' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Dependency Review
  #       uses: actions/dependency-review-action@v2
  #       with:
  #         fail-on-severity: low

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set_toolchain
        id: rust_toolchain
        run: echo "RUST_TOOLCHAIN=$(cat ./rust-toolchain)" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt
          override: true
      - uses: LoliGothick/rustfmt-check@v0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: ""
          options: --all
          args: --unstable-features
          # options: --unstable-features
          # args: --config-path=rustfmt.toml
